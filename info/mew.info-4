Info file: mew.info,    -*-Text-*-
produced by `texinfo-format-buffer'
from file `mew.texi'
using `texinfmt.el' version 2.42 of  7 Jul 2006.

INFO-DIR-SECTION Message User Agent
START-INFO-DIR-ENTRY
* Mew: (mew.info).           Messaging in the Emacs World.
END-INFO-DIR-ENTRY






File: mew.info, Node: charset, Next: highlight, Prev: draft-mode, Up: Customize

Character set
=============

As described in *Note charset-guess::, Mew automatically chooses an
appropriate charset for the message when composing.

If characters of multiple languages exist, and if it is necessary to use
an international charset, `mew-charset-m17n' is used. Its default
value is "utf-8" (equivalent to Unicode). If you want to set it to
"iso-2022-jp-2", configure like this:

     (setq mew-charset-m17n "iso-2022-jp-2")

If you want to check a chosen charset when composing, configure
`mew-ask-charset'.

`nil'
     Not ask.
`A list of charset'
     Ask if the charset is not a member of the list.
`t'
     Ask if `mew-charset-m17n' is used.

For instance, if you want to check when charset other than US-ASCII,
ISO-8859-1, and ISO-8859-15, configure like this:

     (setq mew-ask-charset '("us-ascii" "iso-8859-1" "iso-8859-15"))


For example, when "utf-8" is chosen for a message with this
configuration, you are asked like this:

     utf-8 is used. OK? (y or n)

Typing `y' makes the composed message sent (or queued). If you type
`n', you will go back to the original draft.

In Europe Latin 9 (ISO-8859-15 or Latin 0), which includes the euro
sign, is getting more and more popular instead of Latin 1
(ISO-8859-1). If characters of both Latin 1 and Lain 9 exist in a
draft, Mew takes the following step to decide a charset.

  1. If `unify-8859-on-decoding-mode' is used:
       1. Use "iso-8859-1" if no loss.
       2. Otherwise, use "utf-8".
  2. If `unify-8859-on-decoding-mode' is not used:
       1. If both ISO-8859-1 and ISO-8859-15 can be used with no loss,
          "ISO-8859-1" is used.
       2. Use "iso-8859-1" if no loss.
       3. Use "iso-8859-15" if no loss.
       4. Otherwise, use "utf-8".

The default value of `mew-charset-latin' is "iso-8859-15". If you want
to set it to "iso-8859-1", configure like this:

     (setq mew-charset-latin "iso-8859-1")

If you want to always use UTF-8 for any characters other than
US-ASCII, configure as follows:

     (setq mew-cs-database-for-encoding
           `(((ascii) nil "7bit" "7bit")
             (nil utf-8 "base64" "B")))



File: mew.info, Node: highlight, Next: hooks, Prev: charset, Up: Customize

Highlighting
============

If `mew-use-highlight-mark' is `t', marked message are
highlighted. The default is `t'.

If `mew-use-highlight-header' is `t', the header of a message is
highlighted. The default is `t'.

If `mew-use-highlight-body' is `t', the body of a message is
highlighted. The default is `t'. The limit to be highlighted can be
set by `mew-highlight-body-max-size'. The default is 10000 bytes.

If `mew-use-highlight-url' is `t', a spell is cast to URL strings in a
message. So, when you move the cursor onto the URL, it is
highlighted. The default is `t'.

If `mew-use-cursor-mark' is `t', the mark specified `mew-cursor-mark'
is putted to the beginning of the current line.  The default is
`nil'. The default of `mew-cursor-mark' is ">".

If `mew-use-highlight-cursor-line' is `t', underline is put on the
cursor line in Summary mode. The default is `t'.

If `mew-use-highlight-mouse-line' is `t' on Emacs which supports mouse
highlight, the mouse line is painted in Summary mode. This is very
convenient to read messages clicking the middle button of the
mouse. The default value is `nil'.

If `mew-use-highlight-x-face' is `t', X-Face: in a header is iconified
in Message mode. The default value is `t'. To use this feature,
install the "netpbm" package and the "compface" package.

To modify colors, copy "dot.theme" contained Mew's source file to
an appropriate place, say "~/.mew-theme.el". First, set
`mew-theme-file' to this file name in ".mew.el" as follows:

     (setq mew-theme-file "~/.mew-theme.el")

Then, change the contents. For instance, you can find the following
configuration.

     (mew-setface-bold header-subject
       :tty "red" :light "Firebrick" :dark "OrangeRed")

The symbol `header-subject' means the value of the "Subject:" field in
a header. :tty is the case where Emacs is executed on a terminal while
:light and :dark indicates the case where the background of Emacs
executed with a window is white and black, respectively.

If you wish green for a terminal, ForestGreen for the white
background, and LimeGreen for the black background, modify the
configuration as follows:

     (mew-setface-bold header-subject
       :tty "green" :light "ForestGreen" :dark "LimeGreen")

To know what kind of symbols are prepared, see the "dot.mew".

The method above does not prepare symbols for all field names and
field value. So, `mew-header-color' and `mew-header-color-bold' exist
to change colors easily. If you use the latter, characters become
bold. The former results in normal.  The following is a typical usage:

     (mew-header-color-bold "Subject:" "LimeGreen" "OrangeRed")

With this configuration, "Subject:" becomes bold LimeGreen and its
value turns into bold OrangeRed.

The second method cannot specify the cases of terminal or background.
If you omit the field value color, the field name color is used for
the field value.



File: mew.info, Node: hooks, Next: pop, Prev: highlight, Up: Customize

Hooks
=====

Here is a summary of hooks used in Mew.

`mew-env-hook'
     Hook called at initialize time before setting environment.
`mew-init-hook'
     Hook called at initialize time.
`mew-status-update-hook'
     Hook called at status update(`Z').
`mew-summary-mode-hook'
     Hook called in Summary mode.
`mew-virtual-mode-hook'
     Hook called in Virtual mode.
`mew-thread-display-hook'
     Hook called after new threads are displayed.
`mew-header-mode-hook'
     Hook called in Header mode.
`mew-draft-mode-hook'
     Hook called in Draft mode.
`mew-draft-mode-newdraft-hook'
     Hook called in Draft mode only when new draft is prepared.
`mew-draft-mode-reedit-hook'
     Hook called in Draft mode when a message not in +draft is
     re-edited.
`mew-draft-mode-reedit-draft-hook'
     Hook called in Draft mode when a message in +draft is re-edited.
`mew-draft-mode-reedit-queue-hook'
     Hook called in Draft mode when a message in +queue or +postq is
     re-edited.
`mew-draft-mode-edit-again-hook'
     Hook called in Draft mode when a message returned with the old
     style is edited again.
`mew-message-mode-hook'
     Hook called in Message mode.
`mew-message-hook'
     Hook called whenever message displayed.
`mew-make-message-hook'
     Hook called before making a message in Draft mode. A good example
     is as follows: (add-hook 'mew-make-message-hook 'ispell-message)
`mew-send-hook'
     Hook called before sending/queuing an e-mail message in Draft
     mode.  Note that this hook is called before composition of the
     message
`mew-post-hook'
     Hook called before posting/queuing a NetNews message in Draft
     mode.  Note that this hook is called before composition of the
     message.
`mew-real-send-hook'
     Hook called before sending/queuing an e-mail message in Draft
     mode.  Note that this hook is called after composition of the
     message.
`mew-real-post-hook'
     Hook called before sending/queuing a NetNews message in Draft
     mode.  Note that this hook is called after composition of the
     message.
`mew-smtp-flush-hook'
     Hook called before SMTP runs if messages exist in +queue.
`mew-nntp2-flush-hook'
     Hook called before NNTP runs if messages exist in +postq.
`mew-smtp-sentinel-hook'
     Hook called when a SMTP process finished.
`mew-nntp-sentinel-hook'
     Hook called when a NNTP process to receive messages finished.
`mew-nntp2-sentinel-hook'
     Hook called when a NNTP process to post messages finished.
`mew-pop-sentinel-hook'
     Hook called when a POP process finished.
`mew-pop-sentinel-non-biff-hook'
     Hook called when a non-Biff POP process finished.
`mew-imap-sentinel-hook'
     Hook called when a NNTP process to post messages finished.
`mew-imap-sentinel-hook'
     Hook called when an IMAP process finished.
`mew-imap-sentinel-non-biff-hook'
     Hook called when a non-Biff IMAP process finished.
`mew-scan-sentinel-hook'
     Hook called when scan finished.
`mew-summary-ls-no-scan-hook'
     Hook called when mew-summary-ls does not scan a folder.
`mew-summary-exec-hook'
     Hook called when `x' in Summary mode finished.
`mew-refile-guess-by-from-learn-hook'
     Hook called in mew-refile-guess-by-from-learn.
`mew-sort-hook'
     Hook called when `M-s' in Summary mode finished.
`mew-pack-hook'
     Hook called when `O' in Summary mode finished.
`mew-summary-delete-folder-hook'
     Hook called when a folder deleted.
`mew-summary-rename-folder-hook'
     Hook called when a folder renamed.
`mew-summary-toggle-disp-msg-hook'
     Hook called when `v' in Summary finished.
`mew-syntax-format-hook'
     Hook called when mew-syntax-format is called.
`mew-addrbook-mode-hook'
     Hook called in Addrbook mode.
`mew-cite-hook'
     Hook for an external cite mechanism. If you want to use
     super-cite, (setq mew-cite-hook 'sc-cite-original).
`mew-before-cite-hook'
     Called in mew-summary-reply-with-citation before citation.
`mew-suspend-hook'
     Hook called on suspend.
`mew-quit-hook'
     Hook called on quit.

Here are some example configurations of hook

Draft mode evaluates `text-mode-hook' and `mew-draft-mode-hook' in
order. If you do not set `auto-fill-mode' to `text-mode-hook', It
would be useful to define `mew-draft-mode-hook' as follows:

     (add-hook 'mew-draft-mode-hook
               (lambda ()
                 (auto-fill-mode 1)
                 (set-fill-column 70)))

In this example, the number of fill column is also set to 70.



File: mew.info, Node: pop, Next: imap, Prev: hooks, Up: Customize

POP
===

Mew can POP to retrieve messages. This section describes following
variables to control POP.

`mew-pop-server'
     The name of your POP server.
`mew-pop-ssh-server'
     The name of SSH server which forwards the POP3 port.
`mew-pop-ssl'
     If non-nil, POP connections are made over SSL.
`mew-pop-ssl-port'
     The port for POP over SSL.
`mew-pop-user'
     The user name on your POP server. The default is your login name.
`mew-pop-auth'
     The authentication method for POP3. 'pass means the
     authentication with USER/PASS (i.e. plain password). 'apop means
     the authentication with APOP. `t' means SASL according to
     `mew-pop-auth-list'. The default is 'apop.
`mew-pop-auth-list'
     A list of SASL methods in the preferred order. Currently,
     "CRAM-MD5" can be used.
`mew-pop-delete'
     Whether or not delete messages on a POP server after retrieval by
     POP.  If `t', delete the messages. If `nil', retain the messages.
     If number N, delete the messages N days after the first
     access. The default is `t'.
`mew-pop-size'
     The limit size of messages to be retrieved by POP. The default is
     55296 byte. 0 means unlimited, so you can get all messages from
     the POP server. To know how to retrieve the rest of a truncated
     message, please refer to *Note retrieving::.
`mew-pop-body-lines'
     *The limit of body lines to get when the size of message exceeds
     `mew-pop-size'. The default is 40.
`mew-pop-header-only'
     Whether or not the body of a message is retrieved by POP. If
     non-nil, only header is retrieved. The default is `nil'



File: mew.info, Node: imap, Next: nntp, Prev: pop, Up: Customize

IMAP
====

Mew can use IMAP to retrieve messages. This section describes
following variables to control IMAP.

`mew-imap-server'
     The name of your IMAP server.
`mew-imap-ssh-server'
     The name of SSH server which forwards the IMAP4 port.
`mew-imap-ssl'
     If non-nil, IMAP connections are made over SSL.
`mew-imap-ssl-port'
     The port for IMAP over SSL.
`mew-imap-user'
     The user name on the IMAP server. The default is your login name.
`mew-imap-auth'
     The authentication method for IMAP4. `nil' means the authentication with
     LOGIN (i.e. plain password). `t' means SASL according to
     `mew-imap-auth-list'. The default is `t'.
`mew-imap-auth-list'
     A list of SASL methods in the preferred order.  Currently,
     "CRAM-MD5" and "LOGIN" can be used.
`mew-imap-delete'
     Whether or not delete messages on an IMAP server after retrieval
     by IMAP. If `t', delete the messages. If `nil', retain the
     messages. If number N, delete the messages N days after the first
     access. Otherwise they are not deleted. The default is `t'.
`mew-imap-size'
     The limit size of messages to be retrieved by IMAP. The default
     is 55296 byte. 0 means unlimited, so you can get all messages
     from the IMAP server. To know how to retrieve the rest of a
     truncated message, please refer to *Note retrieving::.
`mew-imap-header-only'
     Whether or not the body of a message is retrieved by IMAP. If
     non-nil, only header is retrieved. The default is `nil'



File: mew.info, Node: nntp, Next: smtp, Prev: imap, Up: Customize

NNTP
====

Mew uses NNTP to read/write News articles. This section describes
following variables to control NNTP.

`mew-nntp-server'
     The name of your NNTP server.
`mew-nntp-ssh-server'
     The name of SSH server which forwards the NNTP port.
`mew-nntp-ssl'
     If non-nil, NNTP connections are made over SSL.
`mew-nntp-ssl-port'
     The port for NNTP over SSL.
`mew-nntp-user'
     The user name on the NNTP server. If non-nil, authentication is
     used.  (Note that mew-nntp-auth does not exist.)
`mew-nntp-newsgroup'
     The name of default Newsgroup.
`mew-nntp-size'
     The limit size of messages to be retrieved by NNTP. The default
     is 55296 byte. 0 means unlimited, so you can get all messages
     from the NNTP server.
`mew-nntp-header-only'
     Whether or not the body of a message is retrieved by NNTP. If
     non-nil, only header is retrieved.
`mew-nntp-msgid-user'
     A user name for creation of Message-Id:. If `nil', the value of
     `mew-user' is used. The default is `nil'.
`mew-nntp-msgid-domain'
     A domain name for creation of Message-Id:. If `nil', the value of
     `mew-mail-domain' is used. The default is `nil'.

A value of Message-Id: for NNTP is created by the following rule:

     message-id = *random*.nntp-msgid-user@nntp-msgid-domain



File: mew.info, Node: smtp, Next: config, Prev: nntp, Up: Customize

SMTP
====

Mew uses SMTP to send messages. If an SMTP server requires
authentication, Mew automatically asks you to input your
password. This section describes following variables to control SMTP.

`mew-smtp-server'
     The name of your SMTP server.
`mew-smtp-port'
     The port for SMTP.
`mew-smtp-ssh-server'
     The name of SSH server which forwards the SMTP port.
`mew-smtp-ssl'
     If non-nil, SMTP connections are made over SSL.
`mew-smtp-ssl-port'
     The port for SMTP over SSL.
`mew-smtp-user'
     The user name on your SMTP server. If not configured, your e-mail
     address is automatically set.
`mew-smtp-auth-list'
     A list of SMTP AUTH methods in the preferred order.  Currently,
     "CRAM-MD5", "PLAIN", and "LOGIN" can be used.
`mew-smtp-helo-domain'
     An e-mail domain to tell a SMTP server with HELO/EHLO. The
     default is "localhost".
`mew-smtp-mail-from'
     The default is `nil'. An e-mail address to tell a SMTP server
     with MAIL FROM:. If `nil', an address specified by the From:
     field is used.
`mew-smtp-msgid-user'
     A user name for creation of Message-Id:. If `nil', the value of
     `mew-user' is used. The default is `nil'.
`mew-smtp-msgid-domain'
     A domain name for creation of Message-Id:. If `nil', the value of
     `mew-mail-domain' is used. The default is `nil'.
`mew-use-8bit'
     Whether or not send 8bit text without MIME encoding. If `nil', an
     appropriate MIME encoding is applied. The default is `nil'.

A value of Message-Id: for SMTP is created by the following rule:

     message-id = *random*.smtp-msgid-user@smtp-msgid-domain

If you want to use Message Submission (SMTP for submission whose port
number is 587), configure as follows:

     (setq mew-smtp-port "submission")

Please refer also to SSL (*Note SSL::) and TLS (*Note TLS::).

Some SMTP servers are mis-configured. They requests authentication
though errors occur if passwords are received. Mew automatically ask a
user to input user's password and send it to an SMTP server if it
requires authentication. To get along with such SMTP servers above,
configure as follows:

     (setq mew-use-smtp-auth nil)

`mew-use-smtp-auth'
     If non-nil, Mew send user's password if an SMTP server requests
     authentication. The default value is `t'.  If `nil', Mew does not
     send user's password even if the (mis-configured) SMTP server
     requests authentication.



File: mew.info, Node: config, Next: config2, Prev: smtp, Up: Customize

Changing receiving/sending behavior
===================================

With `mew-config-alist', you can differ actions of sending/receiving
messages. Let's look at the following example:

     (setq mew-config-alist
           '((home
              (inbox-folder   "+inbox-home")
              (pop-server     "pop.iij4u.or.jp"))
             (ext
              (pop-ssh-server "ssh.example.org"))
             (default
              (proto          "%")
              (imap-server    "imap.example.org")
              (pop-server     "pop.example.org"))))

This example defines three "cases": "home", "ext", and "default". For
each case, some pair of key and value are defined.

We explain the semantics of `mew-config-alist' with this example.
If the "case" is "home", looking up "pop-server" results in
"pop.iij4u.or.jp". If the "case" is "ext", looking up "pop-server"
results in "pop.example.org" since there is no specified key for the
"case" and the "default" is used. If the "case" is "default",
looking up "pop-server" results in "pop.example.org".

If the "case" is "home", looking up "inbox-folder" results in
"+inbox-home". If the "case" is "ext", looking up "inbox-folder"
results in the value of `mew-inbox-folder' since there is no
specified key for both "ext" and "default". If the "case" is
"default", looking up "inbox-folder" also results in the value of
`mew-inbox-folder'.

"proto" (`mew-proto') is used to specify a folder which is selected
when you type `M-x mew'. (If you input `M-x mew' when Mew is not
executed, ""proto" for the "default" "case" is used. If you type `M-x
mew' when Mew is running, "proto" is chosen according to the value of
the "case".

Candidates of the value are "+", "$", "%", and "-". These means
"+inbox", "$inbox", "%inbox", and "-fj.mail.reader.mew" without
any special configuration.

Each key which can be specified in `mew-config-alist' corresponds to
the variable `mew-"key"'. The following list enumerates such keys.

     name, user, mail-domain,
     cc, fcc, dcc, reply-to, organization, header-alist, proto,
     smtp-server, smtp-port, smtp-ssh-server, smtp-ssl, smtp-ssl-port,
     smtp-user, smtp-auth-list,
     smtp-msgid-user, smtp-msgid-domain, smtp-helo-domain, smtp-mail-from,
     pop-server, pop-port, pop-ssh-server, pop-ssl, pop-ssl-port,
     pop-user, pop-auth, pop-auth-list,
     pop-size, pop-header-only, pop-delete, pop-body-lines,
     pop-proxy-server, pop-proxy-port,
     imap-server, imap-port, imap-ssh-server, imap-ssl, imap-ssl-port,
     imap-user, imap-auth, imap-auth-list,
     imap-size, imap-header-only, imap-delete,
     imap-trash-folder, imap-queue-folder, imap-spam-field, imap-spam-word,
     imap-proxy-server, imap-proxy-port,
     nntp-server, nntp-port, nntp-ssh-server, nntp-ssl, nntp-ssl-port,
     nntp-user, nntp-size, nntp-header-only,
     nntp-msgid-user, nntp-msgid-domain,
     ssl-cert-directory, ssl-verify-level,
     inbox-folder, queue-folder, postq-folder,
     mailbox-type, mbox-command, mbox-command-arg,
     signature-file, content-type, refile-guess-alist,
     spam-prog, spam-prog-args, ham-prog, ham-prog-args,
     use-old-pgp, pgp-signer, smime-signer, privacy-method,
     protect-privacy-always, protect-privacy-always-type,
     protect-privacy-encrypted, protect-privacy-encrypted-type,
     protect-privacy-with-old-pgp-signature,
     use-format-flowed

A value for From: is made of 'name', 'user', and 'mail-domain'
according to the following rule:

     from = name <user@mail-domain>

Unless you set `mew-from-list' by yourself, `mew-from-list' is
automatically set collecting 'from' for each "case" according to the
rule above. see *Note cheader::.

Cases configured in `mew-config-alist' can be specified to the
"case". When Mew boots up, both the "case" is "default".

If you want to change the "case", type `C'. You can use completion by
`TAB' and circular completion by `C-cTAB'.

If the "case" is not "default", they are displayed in the mode line of
Summary mode. The following is an example where the "case" is "home".

     (Summary home)


In Draft mode, if the "case" is not "default", the value is displayed
in mode line. The following is an example that the "case" is "home".

     (Draft home)

To change the "case" of a draft in Draft mode, use `C-cC-o'. Its
header is dynamically modified according to the value of the
'mail-domain' key and the 'header-alist' key. Note that the "case" is
a local variable of the Draft mode.

You can automatically set the "case" in Draft mode.

`mew-case-guess-when-prepared'
     If this variable is `t', the "case" is automatically guessed
     according `mew-case-guess-alist' when a draft is prepared. The
     default is `t'.
`mew-case-guess-when-composed'
     If this variable is `t', the "case" is automatically guessed
     according `mew-case-guess-alist' when a message is composed. The
     default is `nil'.
`mew-case-guess-when-replied'
     If this variable is `t', the "case" is automatically guessed
     according `mew-case-guess-when-replied-alist' when a draft is
     prepared by replying. The default is `t'.

The syntax of `mew-case-guess-alist' and
`mew-case-guess-when-replied-alist' is the same as
`mew-refile-guess-alist'. For more information, please refer to
*Note by-alist::.

When typing `C-cC-c' in Draft mode to send a draft, the "case" in
Draft mode is used to determine an SMTP/NNTP server, etc. When typing
`C-cC-c' in Summary mode to flush messages in +queue/+postq, the
"case" in Summary mode is used even if it is different from the
one which was used in Draft mode. `C-uC-cC-c' in Summary mode let
you specify the "case" to flush messages in +queue/postq.


The following is a summary of commands concerned with the "case".

`C'
     In Summary mode, set the "case".
`C-cC-o'
     In Draft mode, set the "case" of a draft.



File: mew.info, Node: config2, Next: custom-misc, Prev: config, Up: Customize

The format of configuration
===========================

In Mew 6.1, configuration format of "mew.el" is improved. You can use
a new format as well as the old format.

   - In the old format, sometime "." appears. In the new fomat, no "."
     appears at all. For instance, you can write ("foo" "bar") instead
     of ("foo" . "bar").
   - In the old format, a numeric port is specified as string. An
     example is "25". In the new format, you can write it as
     integer. An example is 25. The string is still valid. An example
     is "smtp".
   - In the old format, the cases and the keys of `mew-config-alist'
     are written as string. In the new format, you can specify them as
     symbol.

Here is an example of the new format:

     (setq mew-config-alist
           '((home
              (imap-server       "imap.example.org")
              (imap-ssl          t)
              (imap-ssl-port     993)
              (smtp-server       "smtp.example.org")
              (smtp-port         "submission"))))

Compare this with the following old one:

     (setq mew-config-alist
           '(("home"
              ("imap-server"   . "imap.example.org")
              ("imap-ssl"      . t)
              ("imap-ssl-port" . "993")
              ("smtp-server"   . "smtp.example.org")
              ("smtp-port"     . "submission"))))

Again, the old format is still valid. You can also mix the new format
and the old format.



File: mew.info, Node: custom-misc, Next: Tips, Prev: config2, Up: Customize

Miscellaneous
=============

In a certain environment, it would be useful to encode a file with SAMBA
encoding when saving an attached file. For this, set
`mew-use-samba-encoding' to `t'. You can set
`mew-cs-samba' to a character set for the file name. The default is
`shift_jis'.

You can print the current message by typing `#' in Summary mode.  A
function for printing can be set to `mew-print-function'.  Since its
default value is `ps-print-buffer', a message is converted into a
PostScript file before sent to a printer. You can set your own print
function as follows:

     (setq mew-print-function 'my-print-function)

You can set fields in a header to be printed to
`mew-field-for-printing'. Its default value is as follows:

     '("Subject:" "From:" "To:" "Cc:" "Date:")

For instance, if you want to print Subject:, From:, and Date: only,
configure as follows:

     (setq mew-field-for-printing '("Subject:" "From:" "Date:"))




File: mew.info, Node: Tips, Next: region, Prev: custom-misc, Up: Top

Advanced usage
**************

* Menu:

* region::                      Region
* visiting::                    Visiting another buffer
* SSH::                         Secure SHell
* SSL::                         Secure Socket Layer
* TLS::                         Transport Layer Security
* spam::                        Spam messages
* spam2::                       Spam messages (2)
* addr-warn::                   Warning addresses
* biff::                        Biff
* edit::                        Edit mode



File: mew.info, Node: region, Next: visiting, Prev: Tips, Up: Tips

Region
======

In Summary mode, there are commands which work for a region if called
with `C-u'. If a visible region is specified, these commands work for
the region without `C-u'.

For Emacs, you can use the visible region feature by putting the
following into your "~/.emacs".

     (transient-mark-mode 1)

Here is a summary of such commands.

     `?', `/', `tt', `x', `lx', `ma', `Md', `S', `mlc', `mli', `*', `$', `d', `u'

Also you can specify a repeat count before you call `*', `$', `d', and
`u'. For example, typing `3d' puts the `*' mark onto three
messages. You don't have to type `C-u' before the number.



File: mew.info, Node: visiting, Next: SSH, Prev: region, Up: Tips

Visiting another buffer
=======================

If you want to move to +queue after making a message and putting it to
+queue with `C-cC-m' in Draft mode, set
`mew-visit-queue-after-sending' to `t'.

If you want to visit to an appropriate inbox after setting the "case"
with `C' in Summary mode, set
`mew-visit-inbox-after-setting-case' to `t'.

If you want to move from Summary mode to a draft (Draft mode) whose
name is the smallest number, type `C-cC-o'.



File: mew.info, Node: SSH, Next: SSL, Prev: visiting, Up: Tips

Secure SHell
============

Mew supports SSH version 1 and version 2 and OpenSSH for SSH. You must
execute "ssh" on the command and obtain server's public key before you
use Mew with SSH. That is, you should set up so that you can login the
server with your user password or with the password to decrypt the
secret key of the local machine. Of source, you can omit the password
to decrypt the secret key if you use "ssh-agent".

After that, you should configure SSH variables relating to each
protocol. For example, if you want to use POP over SSH, set
`mew-pop-ssh-server' to your SSH server name.

While a connection is protected by SSH, a picture of a lock is shown
in the mode line.

The implementation of Mew does not allow to use both SSH and SSL/TLS
at the same time. If you need to use SSL/TLS over an SSH tunnel,
please configure SSL/TLS only with Mew and set up an SSH tunnel on a
command line.



File: mew.info, Node: SSL, Next: TLS, Prev: SSH, Up: Tips

Secure Socket Layer
===================

Before you use SSL, you should understand the trust model of
certificate authorities (CA). Currently, Mew supports "stunnel"
version 3 and version 4 for SSL.

Before you use Mew with SSL, you must be sure that an SSL connection
can be established to your SSL server. Since "stunnel" is linked to
the "openssl" library, you should understand "openssl".

Suppose we use "~/.certs" as a directory where certificates of trusted
CAs are contained. You need to copy PEM-format certificates embedded
in the source of "openssl" to this director. Each name should be
"<hash>.0".

Here we call a sample CA certificate "ca.pem". You can calculate
<hash> as follows:

     % openssl x509 -hash -noout -in ca.pem

To copy the certificate, do as follows:

     % cp ca.pem ~/.certs/`openssl x509 -hash -noout -in ca.pem`.0

The certificates in the source of "openssl" do not cover all CAs. If
the certificate of your SSL server is signed by another CA, you must
copy the certificate of the CA to the directory. You may be able to
find appropriate certificate from the following page:

     http://www.columbia.edu/~ariel/good-certs/ns45/

There are two important Mew variables to control "stunnel".
`mew-ssl-cert-directory' is the directory where you install
certificates of trusted CAs. It's default value if "~/.certs". Also,
you can set the verification level with `mew-ssl-verify-level'.  It's
default to 1. The meanings of the values are as follows:

0
     No verification.
1
     Verify server's certificate if present. If verification failed,
     an SSL/TLS connection is not created. If not present, an SSL/TLS
     connection is created.
2
     Verify server's certificate. If verification failed, an SSL/TLS
     connection is not created. If not present, an SSL/TLS connection
     is not created.
3
     Verify server's certificate which locally installed (not one from
     the server).

Then configure SSL-related variables of each protocol. For example, if
you want to use POP over SSL, set `mew-pop-ssl' to `t'.
Also, if its port is not a standard one, configure
`mew-pop-ssl-port'.

     (setq mew-pop-ssl t)

To use SSL for SMTP, configure as follows:

     (setq mew-smtp-ssl t)

While a connection is protected by SSL, a picture of a lock is shown
in the mode line.



File: mew.info, Node: TLS, Next: spam, Prev: SSL, Up: Tips

Transport Layer Security
========================

Mew can use TLS instead of SSL. To enable TLS, Mew relies on
"stunnel", too. So, before using TLS, you should configure
according to the explanations in *Note SSL::.

Then, set the SSL port to the same one of the protocol to be
protected. For instance, configure as follows for POP:

     ;; mew-pop-port is default to "pop3" (110)
     (setq mew-pop-ssl t)
     (setq mew-pop-ssl-port mew-pop-port) ;; The default is "pop3s" (995)

That is, if the SSL port is the same as the port of the protocol to be
protected, TLS is used. Otherwise, SSL is used.

The following is an example to protect Message Submission with TLS.

     (setq mew-smtp-port "submission") ;; The default is "smtp" (25)
     (setq mew-smtp-ssl t)
     (setq mew-smtp-ssl-port mew-smtp-port) ;; The default is 465



File: mew.info, Node: spam, Next: spam2, Prev: TLS, Up: Tips

Spam messages
=============

(1) In the case where a spam filter is running on your POP server or
your IMAP server.

You can put the `D' mark to spam messages while you are retrieving
messages in +inbox or you are scanning messages in $inbox/%inbox.

If you use "bogofilter", put the following to your "~/.mew.el".

     (defun mew-spam-bogofilter (val)
       (let ((case-fold-search t))
         (if (string-match "yes" val) ?D)))

     (setq mew-inbox-action-alist
           '(("X-Bogosity:" mew-spam-bogofilter)))

If you want to put the `o' mark so as to be refiled to the +spam
folder, instead of putting to th `D' mark, you should program the
function as follows:

     (defun mew-spam-bogofilter (val)
       (let ((case-fold-search t))
         (if (string-match "yes" val) "+spam")))

If you use "spamassassin", put the following to your "~/.mew.el".

     (setq mew-spam: "X-Spam-Flag:")
     (defun mew-spam-assassin (val)
       (let ((case-fold-search t))
         (if (string-match "yes" val) ?D)))

     (setq mew-inbox-action-alist
           '(("X-Spam-Flag:" mew-spam-assassin)))

In the case where you want to use bsfilter, see a document in the
bsfilter package.


(2) In the case where a spam filter is running in your IMAP server.

You can delete or move spam messages while you are scanning %inbox.
If you use "bogofilter", put the following to your "~/.mew.el".

     (setq mew-imap-spam-field "X-Bogosity")
     (setq mew-imap-spam-word "Yes")

If `mew-imap-spam-folder' or `mew-imap-trash-folder' is defined, spam
messages are moved to the folder. Otherwise, they are removed.

(3) In the case where you installed "bogofilter" in your local
machine, you can put the `*' mark to spam messages. First you need to
install the following script, say "bogo":

     #!/bin/sh

     bogofilter -v -T -B $* | grep S

Type `?' and `RET', then specify "bogo", and spam messages are marked
with `*'. After that, you may want to process them with `md' + `x'.

(4) In the case where you use POP and a spam filter does not run on
the POP server but you want to mark spam messages when retrieving

Since bsfilter can be a POP proxy server, you can implement your
policy. See a document in the bsfilter package.



File: mew.info, Node: spam2, Next: addr-warn, Prev: spam, Up: Tips

Spam messages(2)
================

If you want to let your filter learn the current message in Summary as
a spam, type `ls'. Likewise type `lh' to let your filter learn it as a
ham (non-spam).

To use these commands, you need to configure four variables in
advance.  We consider bogofilter as an example and see three cases.

(2) To let your local filter learn:

     (setq mew-spam-prog "bogofilter")
     (setq mew-spam-prog-args '("-s" "-N" "-v"))
     (setq mew-ham-prog "bogofilter")
     (setq mew-ham-prog-args '("-n" "-S" "-v")))

(2) To let your filter on your <server> learn via SSH:

     (setq mew-spam-prog "ssh")
     (setq mew-spam-prog-args '("<server>" "bogofilter" "-s" "-N" "-v"))
     (setq mew-ham-prog "ssh")
     (setq mew-ham-prog-args '("<server>" "bogofilter" "-n" "-S" "-v")))

(3) To pass through your <firewall> with SSH and to let your filter on
your <server> learn via SSH:

     (setq mew-spam-prog "ssh")
     (setq mew-spam-prog-args '("-A" "<firewall>" "ssh" "<server>" "bogofilter" "-s" "-N" "-v"))
     (setq mew-ham-prog "ssh")
     (setq mew-ham-prog-args '("-A" "<firewall>" "ssh" "<server>" "bogofilter" "-n" "-S" "-v")))

If you use SSH, you need to configure related hosts so that you can
login them without passwords.



File: mew.info, Node: addr-warn, Next: biff, Prev: spam2, Up: Tips

Warning addresses
=================

Suppose you are writing a message which must be closed in your
company. You might write an non-employee's address by mistake. If you
tells your company's domains, for instance, to Mew, it turns
non-employee's addresses to red.

There are four variables to decide which address should trun red.
They are all a list of strings. Mew takes the following rules:

  1. If an address is specified in `mew-safe-addresses', no warning.
  2. If the address is specified in `mew-warn-addresses', warning.
  3. If its domain is specified in `mew-safe-domains', no warning.
  4. If its domain is specified in `mew-warn-domains', warning.
  5. If either `mew-warn-addresses' or `mew-safe-domains' defined,
     warning.
  6. No warning.

Here is an example that an address whose domain is not "@example.org"
turns red.

     (setq mew-safe-domains '("example.org"))

If you want "customers@example.org" to turn red even its domain is
"@example.org", add the following line.

     (setq mew-warn-addresses '("customers@example.org"))



File: mew.info, Node: biff, Next: edit, Prev: addr-warn, Up: Tips

Biff
====

The functionality to check new messages is called biff. With the
following configuration Mew sees how many new messages have arrived
every 5 minutes.

     (setq mew-use-biff t)

If one or more new messages exist, the total number is displayed in
the mode line.

The server and the protocol, which Mew checks, are decided according
to `mew-proto' and the "case" (`mew-case') on boot time.

With the following configuration, Mew beeps when the number of new
messages changes from zero to one or more.

     (setq mew-use-biff-bell t)

To change the interval time of biff, set `mew-biff-interval'.  Below
is an example to set it to 10 minutes.

     (setq mew-biff-interval 10)



File: mew.info, Node: edit, Next: Convention, Prev: biff, Up: Tips

Edit
====

Edit mode is a mode to edit a message to generate another new message.
The followings are typical examples:

   - Saving a new message with big attachments removed
   - Saving a decrypted message whose original one is encrypted with
     PGP/MIME or S/MIME

To edit a current message in Edit mode, type `M-e'. Then, a new draft
is prepared like Draft mode. In Edit mode, you can edit a message as
if you were in Draft mode.

To save edited message to a new message, type `C-cC-c' or
`C-cC-m'. They are the exactly same command. To execute one of them,
you are asked a folder to save the new message.

Please take care that you may confuse this command as retry sending
(*Note sum-write::). Retry seinding is to send a message after editing
while Edit mode is to save a message after modifying.

The following is summary of commands relating to Edit mode. To enter
Edit mode from Summary mode, use the following command.

`M-e'
     Entering Edit mode with the current message.

The following is a summary of commands in Edit mode.

`C-cC-c'
     Saving the edited message to a new message.
`C-cC-m'
     The same as `C-cC-c'
`Other commands'
     The same as the other commands in Edit mode




File: mew.info, Node: Convention, Next: Implementation, Prev: edit, Up: Top

E-mail convention
*****************

When you exchange messages with other people, you should obey minimum
manner. It gives a bad impression to the people if you violate the
manner since such messages are hard to read. We always should try to
write concise yet comprehensive explanations and make an effort to
make receivers well-understood.

We should take good care of the following items.

Fill To: and Cc: fields precisely
     To: is for target receivers and Cc: is for those who are received
     for their information. If his address is not on To:, he might
     skip to read the message. We should take care not to deliver to
     wrong people by mistaking the addresses.

The number of addresses To: and Cc: should be small
     It is discouraged to specify a lot of mail addresses on To: and
     Cc:. You should create a mailing-list instead. Or, if necessary,
     you should make the destination anonymous (*Note anonymous::).

Write a short and clear summary of body in Subject:
     There are people who decide to read contents from their
     Subject:. So, they might skip messages with improper Subject:. We
     should not write a long subject since it is hard to read.

Cite only necessary sentences
     You should not bother to remove unnecessary sentences. With Mew,
     citation must be a piece of cake.

Make your signature simple
     A long signature is just self-satisfaction.

Do not send prank messages
     I do not want to warn this kind of stuff. Nonetheless, someone
     sends Happy or Unhappy messages to others. You should understand
     that people doubt your character.

Attach data files that the receivers can read
     It is text only that you can send without any agreement with the
     receivers. If you want to send data files other than text, you
     should make an agreement with the receivers. To mailing-list, you
     should send text only.

If you wish to learn manner on the Internet more comprehensively,
please refer to RFC1855.




File: mew.info, Node: Implementation, Next: Avail, Prev: Convention, Up: Top

Implementation Issues
*********************

Why are "mewl" and "mewencode" necessary?
     With Mew, you can read throw messages in Summary mode while you
     are retrieving messages or listing the messages again. This means
     that multiple control flows of program are necessary. To make
     multiple control flows by Emacs, the only way is to make a TCP
     connection or to execute sub-process (Emacs Lisp does NOT provide
     a feature of light weight process). For POP and SMTP, Mew makes a
     TCP connection, so they are not a problem. However, to list the
     messages in Summary mode again, we have to execute a
     command. This is why "mewl" exists. The reason why "mewencode"
     exists is just for speed. When I programmed MIME encoding by
     Emacs Lisp in several ways, they are too slow to use. So, I
     decided to continue to use "mewencode". (If Base64 is implemented
     by Emacs, Mew uses the native function.)

Why does the cursor jump onto the end of line when searching(`C-s', `C-r')?
     Thread informations are not displayed in Summary mode. This is
     because the "invisible" property is dynamically put onto them
     when displayed. Strings with this property is not a target of the
     string search. But, thread informations of undisplayed lines do
     not have this property, so the string search targets them. Then a
     matched line is displayed and the "invisible" property is
     put. So, it seems to you that the string search matches the end
     of the line. Mew puts the "invisible" property for all lines in
     Summary mode in background while there are no user key
     inputs. When this word is finished, the `*' mark in the right
     side of the mode line in Summary mode disappears. In this
     situation, string search works exactly as you expect.

MS's mailers can handle file names well if I attach files with Mew 4.3
     MS's mailers use "non-standard MS original" encoding to encode
     file names.  MS mailers should migrate to the standard
     encoding. I repeatedly asked MS to do so, but they did not. So,
     Mew took the following workaround: Mew basically uses the
     standard encoding. In addition, Mew add "MS original parameter"
     with file names encoded with "MS original" encoding.





File: mew.info, Node: Avail, Next: obtain, Prev: Implementation, Up: Top

Availability and mailing-list
*****************************

This chapter describes how to get Mew and related mailing-lists.

* Menu:

* obtain::                      How to get Mew?
* ml::                          Mailing list



File: mew.info, Node: obtain, Next: ml, Prev: Avail, Up: Avail

How to get Mew?
===============

The latest Mew is available from the following repository.

     http://www.Mew.org/Release/

If you want to know about Git versions of Mew, please refer to:

     http://www.mew.org/en/git/



File: mew.info, Node: ml, Next: Copyright, Prev: obtain, Up: Avail

Mailing list
============


If you want to receive release announcement, please subscribe yourself
to mew-release.

     http://www.mew.org/mailman/listinfo/mew-release

If you want to ask questions and/or discuss features in English,
please subscribe yourself to mew-int.

     http://www.mew.org/mailman/listinfo/mew-int




File: mew.info, Node: Copyright, Next: Variable Index, Prev: ml, Up: Top

Copyright
*********

Mew conforms the following copyright.

Copyright (C) 1994-2013 Mew developing team.
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are
met:

  1. Redistributions of source code must retain the above copyright
     notice, this list of conditions and the following disclaimer.
  2. Redistributions in binary form must reproduce the above copyright
     notice, this list of conditions and the following disclaimer in
     the documentation and/or other materials provided with the
     distribution.
  3. Neither the name of the team nor the names of its contributors
     may be used to endorse or promote products derived from this
     software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE TEAM AND CONTRIBUTORS "AS IS" AND ANY
EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE TEAM OR CONTRIBUTORS BE
LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

If you wish to distribute Mew in CD or something, please let me
know. I do not go mad even if you do not tell me but I'm very glad if
you do so.  I never have declined requirements.

The copyright of this manual belongs to the author. Permission is
granted to copy, modify, redistribute this manual but no warranty.




File: mew.info, Node: Variable Index, Next: Key Index, Prev: Copyright, Up: Top

Variable Index
**************


* Menu:

* mail-user-agent:              Composing.              (line   5)
* mail-user-agent:              configuration.          (line   5)
* mail-user-agent:              start.                  (line   5)
* mew-addrbook-for-cite-label:  draft-mode.             (line   5)
* mew-addrbook-for-cite-prefix: draft-mode.             (line   5)
* mew-addrbook-mode-hook:       hooks.
* mew-addrbook-override-by-newone: auto-alias.          (line   5)
* mew-ask-charset:              charset.                (line   5)
* mew-ask-fcc:                  send.                   (line   5)
* mew-ask-subject:              send.                   (line   5)
* mew-auto-flush-queue:         retrieving.             (line   5)
* mew-auto-get:                 start.                  (line   5)
* mew-before-cite-hook:         hooks.
* mew-biff-interval:            biff.                   (line   5)
* mew-case-guess-alist:         config.                 (line   5)
* mew-case-guess-when-composed: config.
* mew-case-guess-when-prepared: config.
* mew-case-guess-when-replied-alist: config.            (line   5)
* mew-case-guess-when-replied:  config.
* mew-cc:                       draft-mode.             (line   5)
* mew-charset-latin:            charset.                (line   5)
* mew-charset-m17n:             charset.                (line   5)
* mew-cite-fields:              draft-mode.             (line   5)
* mew-cite-format:              draft-mode.             (line   5)
* mew-cite-hook:                hooks.
* mew-cite-prefix:              draft-mode.             (line   5)
* mew-cite-prefix-function:     draft-mode.             (line   5)
* mew-config-alist:             config.                 (line   5)
* mew-config-alist:             config2.                (line   5)
* mew-cs-samba:                 custom-misc.            (line   5)
* mew-cursor-mark:              highlight.              (line   5)
* mew-dcc:                      draft-mode.             (line   5)
* mew-debug:                    status-update.          (line   5)
* mew-decode-broken:            analysis.
* mew-decode-broken:            status-update.          (line   5)
* mew-decode-quoted:            invalid.                (line   5)
* mew-delete-unread-mark-by-mark: unread mark.          (line   5)
* mew-draft-mode-edit-again-hook: hooks.
* mew-draft-mode-hook:          hooks.
* mew-draft-mode-newdraft-hook: hooks.
* mew-draft-mode-reedit-draft-hook: hooks.
* mew-draft-mode-reedit-hook:   hooks.
* mew-draft-mode-reedit-queue-hook: hooks.
* mew-draft-privacy-method:     shortcut.               (line   5)
* mew-end-of-message-string:    multipart.              (line   5)
* mew-end-of-part-string:       multipart.              (line   5)
* mew-env-hook:                 hooks.
* mew-field-delete-for-forwarding: forward.             (line   5)
* mew-field-for-printing:       custom-misc.            (line   5)
* mew-fields:                   header.                 (line   5)
* mew-file-max-size:            analysis.
* mew-flowed-auto-wrap:         longline.               (line   5)
* mew-flowed-fold-length:       longline.               (line   5)
* mew-flowed-fold-threshold:    longline.               (line   5)
* mew-from-list:                cheader.                (line   5)
* mew-ham-prog-args:            spam2.                  (line   5)
* mew-ham-prog:                 spam2.                  (line   5)
* mew-header-alist:             draft-mode.             (line   5)
* mew-header-max-length:        analysis.
* mew-header-mode-hook:         hooks.
* mew-header-veil-count:        features.               (line   5)
* mew-highlight-body-max-size:  highlight.              (line   5)
* mew-imap-auth:                imap.
* mew-imap-auth-list:           imap.
* mew-imap-delete:              imap.
* mew-imap-delete:              retrieving.             (line   5)
* mew-imap-header-only:         imap.
* mew-imap-header-only:         retrieving.             (line   5)
* mew-imap-sentinel-hook:       hooks.
* mew-imap-sentinel-hook:       hooks.
* mew-imap-sentinel-non-biff-hook: hooks.
* mew-imap-server:              configuration.          (line   5)
* mew-imap-server:              imap.
* mew-imap-size:                imap.
* mew-imap-spam-field:          spam.                   (line   5)
* mew-imap-spam-folder:         spam.                   (line   5)
* mew-imap-spam-word:           spam.                   (line   5)
* mew-imap-ssh-server:          imap.
* mew-imap-ssl:                 imap.
* mew-imap-ssl-port:            imap.
* mew-imap-trash-folder:        delete mark.            (line   5)
* mew-imap-trash-folder-list:   delete mark.            (line   5)
* mew-imap-user:                imap.
* mew-inbox-action-alist:       spam.                   (line   5)
* mew-init-hook:                hooks.
* mew-lisp-max-length:          auto-alias.             (line   5)
* mew-lisp-max-length:          by-from.                (line   5)
* mew-lisp-max-length:          by-thread.              (line   5)
* mew-mail-address-list:        reply.                  (line   5)
* mew-mail-domain-list:         cheader.                (line   5)
* mew-mailbox-type:             config.                 (line   5)
* mew-mailbox-type:             configuration.          (line   5)
* mew-mailbox-type:             retrieving.             (line   5)
* mew-mailbox-type:             start.                  (line   5)
* mew-make-message-hook:        hooks.
* mew-mbox-command-arg:         configuration.          (line   5)
* mew-mbox-command:             configuration.          (line   5)
* mew-message-hook:             hooks.
* mew-message-mode-hook:        hooks.
* mew-mime-multipart-alternative-list: message-mode.    (line   5)
* mew-name:                     configuration.          (line   5)
* mew-nntp-header-only:         nntp.
* mew-nntp-header-only:         retrieving.             (line   5)
* mew-nntp-msgid-domain:        nntp.
* mew-nntp-msgid-user:          nntp.
* mew-nntp-newsgroup:           nntp.
* mew-nntp-sentinel-hook:       hooks.
* mew-nntp-server:              configuration.          (line   5)
* mew-nntp-server:              nntp.
* mew-nntp-size:                nntp.
* mew-nntp-ssh-server:          nntp.
* mew-nntp-ssl:                 nntp.
* mew-nntp-ssl-port:            nntp.
* mew-nntp-user:                nntp.
* mew-nntp2-flush-hook:         hooks.
* mew-nntp2-sentinel-hook:      hooks.
* mew-pack-hook:                hooks.
* mew-pick-pattern-list:        condition.              (line   5)
* mew-pop-auth-list:            pop.
* mew-pop-auth:                 pop.
* mew-pop-body-lines:           pop.
* mew-pop-delete:               pop.
* mew-pop-delete:               retrieving.             (line   5)
* mew-pop-header-only:          pop.
* mew-pop-header-only:          retrieving.             (line   5)
* mew-pop-sentinel-hook:        hooks.
* mew-pop-sentinel-non-biff-hook: hooks.
* mew-pop-server:               pop.
* mew-pop-size:                 pop.
* mew-pop-ssh-server:           SSH.                    (line   5)
* mew-pop-ssh-server:           pop.
* mew-pop-ssl:                  SSL.                    (line   5)
* mew-pop-ssl:                  pop.
* mew-pop-ssl-port:             SSL.                    (line   5)
* mew-pop-ssl-port:             pop.
* mew-pop-user:                 configuration.          (line   5)
* mew-pop-user:                 pop.
* mew-post-hook:                hooks.
* mew-print-function:           custom-misc.            (line   5)
* mew-print-function:           features.               (line   5)
* mew-prog-gpg:                 cipher-viewing.         (line   5)
* mew-prog-grep:                condition.              (line   5)
* mew-prog-grep-opts:           condition.              (line   5)
* mew-prog-msexcel-ext:         message-mode.           (line   5)
* mew-prog-msexcel:             message-mode.           (line   5)
* mew-prog-mspowerpoint-ext:    message-mode.           (line   5)
* mew-prog-mspowerpoint:        message-mode.           (line   5)
* mew-prog-msword-ext:          message-mode.           (line   5)
* mew-prog-msword:              message-mode.           (line   5)
* mew-prog-pgp:                 cipher-viewing.         (line   5)
* mew-prog-pgp2:                cipher-viewing.         (line   5)
* mew-prog-pgp5:                cipher-viewing.         (line   5)
* mew-prog-text/html-ext:       message-mode.           (line   5)
* mew-protect-privacy-always:   shortcut.               (line   5)
* mew-protect-privacy-always-type: shortcut.            (line   5)
* mew-protect-privacy-encrypted: shortcut.              (line   5)
* mew-protect-privacy-encrypted-type: shortcut.         (line   5)
* mew-protect-privacy-with-old-pgp-signature: shortcut.  (line   5)
* mew-proto:                    config.                 (line   5)
* mew-proto:                    configuration.          (line   5)
* mew-proto:                    start.                  (line   5)
* mew-quit-hook:                hooks.
* mew-real-post-hook:           hooks.
* mew-real-send-hook:           hooks.
* mew-refile-auto-refile-skip-any-mark: auto-refile.    (line   5)
* mew-refile-ctrl-multi:        guess-rule.             (line   5)
* mew-refile-guess-alist:       by-alist.               (line   5)
* mew-refile-guess-by-from-learn-hook: hooks.
* mew-refile-guess-control:     guess-rule.             (line   5)
* mew-refile-guess-from-me-is-special: by-from-folder.  (line   5)
* mew-refile-guess-from-me-is-special: by-from.         (line   5)
* mew-refile-guess-strip-domainpart: by-default.        (line   5)
* mew-reply-all-alist:          reply.                  (line   5)
* mew-reply-fromme-alist:       reply.                  (line   5)
* mew-reply-sender-alist:       reply.                  (line   5)
* mew-safe-addresses:           addr-warn.              (line   5)
* mew-safe-domains:             addr-warn.              (line   5)
* mew-scan-sentinel-hook:       hooks.
* mew-search-method:            dbsearch.               (line   5)
* mew-send-hook:                hooks.
* mew-signature-as-lastpart:    cite.                   (line   5)
* mew-signature-file:           cite.                   (line   5)
* mew-signature-insert-last:    cite.                   (line   5)
* mew-smtp-auth-list:           smtp.
* mew-smtp-flush-hook:          hooks.
* mew-smtp-helo-domain:         smtp.
* mew-smtp-mail-from:           smtp.
* mew-smtp-msgid-domain:        smtp.
* mew-smtp-msgid-user:          smtp.
* mew-smtp-port:                smtp.
* mew-smtp-sentinel-hook:       hooks.
* mew-smtp-server:              configuration.          (line   5)
* mew-smtp-server:              smtp.
* mew-smtp-ssh-server:          smtp.
* mew-smtp-ssl:                 SSL.                    (line   5)
* mew-smtp-ssl-port:            smtp.
* mew-smtp-ssl:                 smtp.
* mew-smtp-user:                smtp.
* mew-sort-default-key-alist:   sorting.                (line   5)
* mew-sort-default-key:         sorting.                (line   5)
* mew-sort-hook:                hooks.
* mew-sort-key-alist:           sorting.                (line   5)
* mew-spam-prog-args:           spam2.                  (line   5)
* mew-spam-prog:                spam2.                  (line   5)
* mew-spam:                     spam.                   (line   5)
* mew-ssl-cert-directory:       SSL.                    (line   5)
* mew-ssl-verify-level:         SSL.                    (line   5)
* mew-status-update-hook:       hooks.
* mew-summary-delete-folder-hook: hooks.
* mew-summary-exec-hook:        hooks.
* mew-summary-form-extract-rule: summary-mode.          (line   5)
* mew-summary-form-from-me-prefix: summary-mode.        (line   5)
* mew-summary-form-mark-delete: summary-mode.           (line   5)
* mew-summary-form-mark-review: summary-mode.           (line   5)
* mew-summary-form-mark-spam:   summary-mode.           (line   5)
* mew-summary-form:             summary-mode.           (line   5)
* mew-summary-ls-no-scan-hook:  hooks.
* mew-summary-mark-direction:   summary-mode.           (line   5)
* mew-summary-mode-hook:        hooks.
* mew-summary-rename-folder-hook: hooks.
* mew-summary-show-direction:   summary-mode.           (line   5)
* mew-summary-toggle-disp-msg-hook: hooks.
* mew-suspend-hook:             hooks.
* mew-syntax-format-hook:       hooks.
* mew-theme-file:               highlight.              (line   5)
* mew-thread-display-hook:      hooks.
* mew-thread-separator:         thread.                 (line   5)
* mew-trash-folder:             delete mark.            (line   5)
* mew-trash-folder-list:        delete mark.            (line   5)
* mew-use-8bit:                 smtp.
* mew-use-8bit:                 status-update.          (line   5)
* mew-use-alternative:          analysis.
* mew-use-biff-bell:            biff.                   (line   5)
* mew-use-biff:                 biff.                   (line   5)
* mew-use-cached-passwd:        password.               (line   5)
* mew-use-cursor-mark:          highlight.              (line   5)
* mew-use-fast-refile:          by-folder.              (line   5)
* mew-use-format-flowed:        longline.               (line   5)
* mew-use-full-window:          summary-mode.           (line   5)
* mew-use-header-veil:          features.               (line   5)
* mew-use-header-veil:          status-update.          (line   5)
* mew-use-highlight-body:       highlight.              (line   5)
* mew-use-highlight-cursor-line: highlight.             (line   5)
* mew-use-highlight-header:     highlight.              (line   5)
* mew-use-highlight-mark:       highlight.              (line   5)
* mew-use-highlight-mouse-line: highlight.              (line   5)
* mew-use-highlight-url:        highlight.              (line   5)
* mew-use-highlight-x-face:     highlight.              (line   5)
* mew-use-master-passwd:        password.               (line   5)
* mew-use-node-folder:          by-folder.              (line   5)
* mew-use-old-pgp:              shortcut.               (line   5)
* mew-use-old-pgp:              status-update.          (line   5)
* mew-use-samba-encoding:       custom-misc.            (line   5)
* mew-use-smtp-auth:            smtp.
* mew-use-text-body:            analysis.
* mew-use-text/html:            analysis.
* mew-use-text/xml:             analysis.
* mew-use-thread-separator:     thread.                 (line   5)
* mew-use-unread-mark:          unread mark.            (line   5)
* mew-user:                     configuration.          (line   5)
* mew-virtual-mode-hook:        hooks.
* mew-visit-inbox-after-setting-case: visiting.         (line   5)
* mew-visit-queue-after-sending: visiting.              (line   5)
* mew-warn-addresses:           addr-warn.              (line   5)
* mew-warn-domains:             addr-warn.              (line   5)
* mew-warning-field-level:      status-update.          (line   5)
* mew-x-pgp-key-list:           cipher-viewing.         (line   5)
* read-mail-command:            configuration.          (line   5)




